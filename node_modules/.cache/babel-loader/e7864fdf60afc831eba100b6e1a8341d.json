{"ast":null,"code":"var _jsxFileName = \"/home/tandy/trybe/course/exercise-react-hooks-refactoring/src/context/Provider.js\";\n// src/context/Provider.js\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext';\n\nfunction Provider({\n  children\n}) {\n  // const [cars, setCars] = useState({red: false, blue: false, yellow: false});\n  const [redCar, setRedCar] = useState(false);\n  const [blueCar, setBlueCar] = useState(false);\n  const [yellowCar, setYellowCar] = useState(false); // const moveCar = (car, side) => {\n  //   setCars({ ...cars, cars: { [car]: side } });\n  // };\n\n  const moveCar = car => {\n    car === 'red' && setRedCar(!redCar);\n    car === 'blue' && setBlueCar(!blueCar);\n    car === 'yellow' && setYellowCar(!yellowCar);\n  };\n\n  const context = {\n    redCar,\n    blueCar,\n    yellowCar,\n    moveCar,\n    setRedCar,\n    setBlueCar,\n    setYellowCar\n  };\n  return /*#__PURE__*/React.createElement(CarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/tandy/trybe/course/exercise-react-hooks-refactoring/src/context/Provider.js"],"names":["PropTypes","React","useState","CarsContext","Provider","children","redCar","setRedCar","blueCar","setBlueCar","yellowCar","setYellowCar","moveCar","car","context","propTypes","node","isRequired"],"mappings":";AAAA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAE9B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C,CAL8B,CAM9B;AACA;AACA;;AAEA,QAAMU,OAAO,GAAIC,GAAD,IAAS;AACvBA,IAAAA,GAAG,KAAK,KAAR,IAAiBN,SAAS,CAAC,CAACD,MAAF,CAA1B;AACAO,IAAAA,GAAG,KAAK,MAAR,IAAkBJ,UAAU,CAAC,CAACD,OAAF,CAA5B;AACAK,IAAAA,GAAG,KAAK,QAAR,IAAoBF,YAAY,CAAC,CAACD,SAAF,CAAhC;AACD,GAJD;;AAMA,QAAMI,OAAO,GAAG;AAAER,IAAAA,MAAF;AAAUE,IAAAA,OAAV;AAAmBE,IAAAA,SAAnB;AAA8BE,IAAAA,OAA9B;AAAuCL,IAAAA,SAAvC;AAAkDE,IAAAA,UAAlD;AAA8DE,IAAAA;AAA9D,GAAhB;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CADF;AAMD;;AAAA;AAEDD,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAeb,QAAf","sourcesContent":["// src/context/Provider.js\n\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext';\n\nfunction Provider({ children }) {\n\n  // const [cars, setCars] = useState({red: false, blue: false, yellow: false});\n  const [redCar, setRedCar] = useState(false);\n  const [blueCar, setBlueCar] = useState(false);\n  const [yellowCar, setYellowCar] = useState(false);\n  // const moveCar = (car, side) => {\n  //   setCars({ ...cars, cars: { [car]: side } });\n  // };\n\n  const moveCar = (car) => {\n    car === 'red' && setRedCar(!redCar);\n    car === 'blue' && setBlueCar(!blueCar);\n    car === 'yellow' && setYellowCar(!yellowCar);\n  }\n\n  const context = { redCar, blueCar, yellowCar, moveCar, setRedCar, setBlueCar, setYellowCar };\n\n  return (\n    <CarsContext.Provider value={context}>\n      {children}\n    </CarsContext.Provider>\n  );\n  \n};\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}