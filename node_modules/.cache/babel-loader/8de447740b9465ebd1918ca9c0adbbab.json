{"ast":null,"code":"var _jsxFileName = \"/home/tandy/trybe/course/exercise-react-hooks-refactoring/src/TrafficSignal.jsx\";\nimport React, { Component, useState } from 'react';\nimport CarsContext from './context/CarsContext';\nimport redSignal from './images/redSignal.jpeg';\nimport yellowSignal from './images/yellowSignal.jpeg';\nimport greenSignal from './images/greenSignal.jpeg';\n\nfunction TrafficSignal() {\n  const {\n    signal,\n    setSignal\n  } = useState(CarsContext);\n\n  const renderSignal = signalColor => {\n    if (signalColor === 'red') return redSignal;\n    if (signalColor === 'yellow') return yellowSignal;\n    if (signalColor === 'green') return greenSignal;\n    return null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSignal('red'),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Red\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSignal('yellow'),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Yellow\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSignal('green'),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Green\")), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"signal\",\n    src: renderSignal(signal),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\nexport default TrafficSignal;","map":{"version":3,"sources":["/home/tandy/trybe/course/exercise-react-hooks-refactoring/src/TrafficSignal.jsx"],"names":["React","Component","useState","CarsContext","redSignal","yellowSignal","greenSignal","TrafficSignal","signal","setSignal","renderSignal","signalColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAGA,SAASC,aAAT,GAAyB;AACvB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBP,QAAQ,CAACC,WAAD,CAApC;;AACA,QAAMO,YAAY,GAAIC,WAAD,IAAiB;AACpC,QAAIA,WAAW,KAAK,KAApB,EAA2B,OAAOP,SAAP;AAC3B,QAAIO,WAAW,KAAK,QAApB,EAA8B,OAAON,YAAP;AAC9B,QAAIM,WAAW,KAAK,OAApB,EAA6B,OAAOL,WAAP;AAC7B,WAAO,IAAP;AACD,GALD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMG,SAAS,CAAC,KAAD,CAAhC;AAAyC,IAAA,IAAI,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,QAAD,CAAhC;AAA4C,IAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,IAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,OAAD,CAAhC;AAA2C,IAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEC,YAAY,CAACF,MAAD,CAAzC;AAAmD,IAAA,GAAG,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD;;AAAA;AAED,eAAeD,aAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport CarsContext from './context/CarsContext';\nimport redSignal from './images/redSignal.jpeg';\nimport yellowSignal from './images/yellowSignal.jpeg';\nimport greenSignal from './images/greenSignal.jpeg';\n\n\nfunction TrafficSignal() {\n  const {signal, setSignal} = useState(CarsContext);\n  const renderSignal = (signalColor) => {\n    if (signalColor === 'red') return redSignal;\n    if (signalColor === 'yellow') return yellowSignal;\n    if (signalColor === 'green') return greenSignal;\n    return null;\n  };\n  return (\n    <div>\n      <div className=\"button-container\">\n        <button onClick={() => setSignal('red')} type=\"button\">\n          Red\n        </button>\n        <button onClick={() => setSignal('yellow')} type=\"button\">\n          Yellow\n        </button>\n        <button onClick={() => setSignal('green')} type=\"button\">\n          Green\n        </button>\n      </div>\n      <img className=\"signal\" src={renderSignal(signal)} alt=\"\" />\n    </div>\n  );\n};\n\nexport default TrafficSignal;\n"]},"metadata":{},"sourceType":"module"}